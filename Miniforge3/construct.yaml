{% set name = os.environ.get("MINIFORGE_NAME", "Miniforge3") %}
{% set version = os.environ.get("MINIFORGE_VERSION", "24.11.0-1") %}
{% set conda_libmamba_solver_version = "24.11.1"%}
# when mamba_version is updated here, also update MICROMAMBA_VERSION in scripts/build.sh
{% set mamba_version = "2.0.5"%}

name: {{ name }}
version: {{ version }}
company: conda-forge

channels:
  # specifying the channel with the full URL adds two channels
  # when the end user adds the channel without the full URL
  # - https://conda.anaconda.org/conda-forge
  - conda-forge

write_condarc: True
# keep pkgs for space-saving implications for hardlinks when create new environments
# and keep the same with Miniconda
keep_pkgs: True
license_file: {{ os.environ.get("MINIFORGE_LICENSE_OVERRIDE", "../LICENSE") }}

# During the interactive installation, these variables are checked.
# During batch installation, conda is never initialized
initialize_conda: True
initialize_by_default: False

user_requested_specs:
{% if name.endswith("pypy3") %}
  - python 3.9.* *_pypy
  - conda >=24.7.1
  - mamba >=1.5.9
{% else %}
  - python 3.12.*
  - conda >={{ version.split("-")[0] }}
  - mamba >={{ mamba_version }}
{% endif %}
  - pip
  # Omit conda-libmamba-solver so that conda is free to remove it later
  - miniforge_console_shortcut 1.*  # [win]

specs:
{% if name.endswith("pypy3") %}
  - python 3.9.* *_pypy
  - conda 24.7.1
  - mamba 2.0.5
  - conda-libmamba-solver 24.7.0
{% else %}
  - python 3.12.*
  - conda {{ version.split("-")[0] }}
  - mamba {{ mamba_version }}
  - conda-libmamba-solver {{ conda_libmamba_solver_version }}
{% endif %}
  - pip
  - miniforge_console_shortcut 1.*  # [win]

{% if name.startswith("Mambaforge") %}
pre_install: mambaforge_deprecation.sh  # [unix]
pre_install: mambaforge_deprecation.bat  # [win]
{% elif name.endswith("pypy3") %}
pre_install: pypy_deprecation.sh  # [unix]
pre_install: pypy_deprecation.bat  # [win]
{% endif %}

virtual_specs:
  - __glibc >=2.17 # [linux]
  - __osx >=10.13 # [osx]
